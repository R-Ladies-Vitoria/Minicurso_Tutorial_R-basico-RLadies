ls <- list(ls1 = 'a',ls2 = c(1,2,3),ls3 = array(rnorm(6),dim = c(3,1,2,1)))
ls
library(knitr)
library(DT)
knitr::opts_chunk$set(echo = FALSE, fig.align = "center", message = FALSE,
warning = FALSE, comment = "  #>", collapse = T)
library(knitr)
library(readxl)
dados <- read_excel(path = "Base_CTG_caracterizacao.xls",na="NA")
dados
library(skimr)
skim(dadso)
skim(dados)
skim(dados)
kable(skim(iris))
kable(skim(iris))
kable(skim(iris))
library(readxl)
dados <- read_excel(path = "Base_CTG_caracterizacao.xls",na="NA")
dados
### Nome das variáveis
## Funções tidyverse e janitor
library(tidyverse)
library(janitor)
names(dados)
dados <- clean_names(dados) # a função clean_names() para primeiro ajuste dos nomes das variaveis
names(dados)
### Linhas e colunas vazias
dados <- remove_empty(dados,"rows")
dados <- remove_empty(dados,"cols")
names(dados)
### Identificação de casos duplicados
get_dupes(dados, id)
library(dplyr)
dados1 <-  distinct(dados,id, .keep_all = TRUE)
dados1
### Identificar tipo e classe de todas as variáveis da base
str(dados1)
## converter as variáveis para data reduzida
dados1$data_aval  <- as.Date(dados1$data_aval)
dados1$data_nascimento  <- as.Date(dados1$data_nascimento)
str(dados1)
# Para variáveis qualitativas: tabela de frequências da variável corion.
#do pacote janitor
tabyl(dados1,corion)
# Para lidar com variáveis de texto, vamos utilizar o pacote stringr.
library(stringr)
dados1$corion <- str_to_lower(dados1$corion)
tabyl(dados1,corion)
# A variável indicadora de cor branca (cor_branco) está categorizada
# como 0 para não e 1 para sim.
tabyl(dados1,cor_branco)
dados1$cor_branco <- ifelse(dados1$id==9,1,dados1$cor_branco)
tabyl(dados1,cor_branco)
library(dplyr)
